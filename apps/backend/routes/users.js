import express from "express"
import { authenticateToken, isAdmin } from "../middleware/auth.js"
import pool from "../db.js"

const router = express.Router()

// üß© L·∫•y danh s√°ch t·∫•t c·∫£ ng∆∞·ªùi d√πng (Admin)
router.get("/", authenticateToken, isAdmin, async (req, res) => {
  try {
    const [rows] = await pool.query("SELECT id, name, email, role, status, joinDate FROM users")
    res.json(rows)
  } catch (error) {
    console.error("‚ùå L·ªói khi l·∫•y danh s√°ch ng∆∞·ªùi d√πng:", error)
    res.status(500).json({ error: "L·ªói m√°y ch·ªß khi l·∫•y danh s√°ch ng∆∞·ªùi d√πng" })
  }
})

// üß© C·∫≠p nh·∫≠t th√¥ng tin ng∆∞·ªùi d√πng (Admin)
router.put("/:id", authenticateToken, isAdmin, async (req, res) => {
  const { name, email, role, status } = req.body
  const id = parseInt(req.params.id)

  try {
    const [result] = await pool.query(
      `UPDATE users SET 
        name = COALESCE(?, name),
        email = COALESCE(?, email),
        role = COALESCE(?, role),
        status = COALESCE(?, status)
      WHERE id = ?`,
      [name, email, role, status, id]
    )

    if (result.affectedRows === 0) {
      return res.status(404).json({ error: "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng" })
    }

    const [updatedUser] = await pool.query(
      "SELECT id, name, email, role, status, joinDate FROM users WHERE id = ?",
      [id]
    )

    res.json(updatedUser[0])
  } catch (error) {
    console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t ng∆∞·ªùi d√πng:", error)
    res.status(500).json({ error: "L·ªói m√°y ch·ªß khi c·∫≠p nh·∫≠t ng∆∞·ªùi d√πng" })
  }
})

// üóëÔ∏è X√≥a ng∆∞·ªùi d√πng (Admin)
router.delete("/:id", authenticateToken, isAdmin, async (req, res) => {
  const id = parseInt(req.params.id)

  try {
    const [result] = await pool.query("DELETE FROM users WHERE id = ?", [id])

    if (result.affectedRows === 0) {
      return res.status(404).json({ error: "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng" })
    }

    res.json({ message: "ƒê√£ x√≥a ng∆∞·ªùi d√πng th√†nh c√¥ng" })
  } catch (error) {
    console.error("‚ùå L·ªói khi x√≥a ng∆∞·ªùi d√πng:", error)
    res.status(500).json({ error: "L·ªói m√°y ch·ªß khi x√≥a ng∆∞·ªùi d√πng" })
  }
})

export default router
